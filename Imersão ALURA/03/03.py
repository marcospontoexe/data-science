# -*- coding: utf-8 -*-
"""03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TCwmehZJDJne0a3eVGiqwxb0uOv1xki8
"""

import pandas as pd    

url = "https://gist.githubusercontent.com/tgcsantos/3bdb29eba6ce391e90df2b72205ba891/raw/22fa920e80c9fa209a9fccc8b52d74cc95d1599b/dados_imoveis.csv"
dados = pd.read_csv(url)
dados

dados["Valor"].str.split()  #causa separação do Objeto "Valor". Precisa usar ".str" para converter um objeto em string

dados[["Moeda", "Valor_Moeda", "Tipo_Anuncio"]] = dados["Valor"].str.split(expand = True) #Cria mais três string no Objeto dados
dados

dados = dados[dados["Tipo_Anuncio"].isnull()] #dados recebe ele mesmo, mas apenas as linhas em que os índices da coluna "Tipo_Anuncio" estão vazios
dados

dados["Valor_Moeda"].str.replace(".","")        #troca os "pontos" por "espaço vazio"
dados["Valor_Moeda"] = dados["Valor_Moeda"].str.replace(".","").astype(float) #A coluna "Valor_Moeda" recebe ela mesma, mas sem pontos e convertida para float
dados

pd.set_option('display.float_format', lambda x: '%.2f' % x)  #configura a visualização do Pandas para eliminar a notação cientifica
dados.describe()     #mostra insformações sobre todos os elementos do objeto 'dados'
dados

dados['Valor_m2'] = dados['Valor_Moeda']/dados['Metragem']      #cria uma nova coluna
dados

dados.groupby('Bairro').mean() #agrupa o objeto 'dados' por bairro, e faz a média. Transforma a coluna 'Bairro' em index do objeto 'dados'

dados['Bairro'].value_counts()  #mostra a quantidade de imóveis por bairro

dados['Bairro'].value_counts()[0:10].index      #mostra os dez primeiros bairros com mais imóveis vendidos

top_bairros = dados['Bairro'].value_counts()[0:10].index
top_bairros

dados.query("Bairro in @top_bairros")     #mostra as linhas da coluna "Bairro" que são comum com a coluna "top_bairros". Colocar o @ na frente da variável

import seaborn as sns
import matplotlib.pyplot as plt

sns.set()       #define os padrões do sns
plt.figure(figsize=(10, 8))       #configura o tamanho
ax = sns.barplot(x = 'Bairro', y='Valor_m2', data = dados.query("Bairro in @top_bairros"))
ax.set_title("Histograma com o avlor dos imóveis")   #título do gráfico
ax.tick_params(axis='x', rotation = 45)         #rotaciona a legenda em 45°

ax = sns.boxplot(x = 'Bairro', y='Metragem', data = dados.query("Bairro in @top_bairros"))
ax.tick_params(axis='x', rotation = 45)         #rotaciona a legenda em 45°

ax = sns.boxplot(x = 'Bairro', y='Metragem', data = dados.query("Bairro in @top_bairros & Metragem < 30000"))
ax.tick_params(axis='x', rotation = 45)         #rotaciona a legenda em 45°